import React, { useState } from 'react';
import { PDFUploadZone } from './PDFUploadZone';
import { PDFValidationResultComponent } from './PDFValidationResult';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { RotateCcw, Download, Eye } from 'lucide-react';
import { useToast } from '@/hooks/use-toast';
import type { PdfValidationResult } from '@/types/pdf';

export const PDFProcessor: React.FC = () => {
  const [validationResult, setValidationResult] = useState<PdfValidationResult | null>(null);
  const [isProcessing, setIsProcessing] = useState(false);
  const { toast } = useToast();

  const handleFileValidated = (result: PdfValidationResult) => {
    console.log('üü¢ –§–∞–π–ª –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω –≤ PDFProcessor:', result);
    setValidationResult(result);
    
    if (result.isValid) {
      toast({
        title: "–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω",
        description: `PDF —Ñ–∞–π–ª "${result.fileInfo.name}" –≥–æ—Ç–æ–≤ –∫ –æ–±—Ä–∞–±–æ—Ç–∫–µ`,
      });
    } else {
      toast({
        title: "–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏",
        description: result.errors[0] || "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–∞–π–ª",
        variant: "destructive",
      });
    }
  };

  const handleReset = () => {
    setValidationResult(null);
    setIsProcessing(false);
  };

  const handleProcessDocument = async () => {
    if (!validationResult?.isValid) return;
    
    setIsProcessing(true);
    
    // Simulate document processing
    try {
      await new Promise(resolve => setTimeout(resolve, 2000));
      
      toast({
        title: "–î–æ–∫—É–º–µ–Ω—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω",
        description: "PDF —Ñ–∞–π–ª —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é",
      });
    } catch (error) {
      toast({
        title: "–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏",
        description: "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞",
        variant: "destructive",
      });
    } finally {
      setIsProcessing(false);
    }
  };

  return (
    <div className="w-full max-w-4xl mx-auto space-y-6">
      {/* Debug info */}
      <div className="bg-blue-50 p-4 rounded-lg text-sm text-blue-800">
        <strong>Debug:</strong> –ö–æ–º–ø–æ–Ω–µ–Ω—Ç PDFProcessor –∑–∞–≥—Ä—É–∂–µ–Ω. validationResult: {validationResult ? '–µ—Å—Ç—å' : '–Ω–µ—Ç'}
      </div>

      {/* Header */}
      <div className="text-center space-y-2">
        <h1 className="text-3xl font-bold bg-gradient-to-r from-primary to-primary-glow bg-clip-text text-transparent">
          –í–∞–ª–∏–¥–∞—Ç–æ—Ä PDF –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
        </h1>
        <p className="text-muted-foreground">
          –ó–∞–≥—Ä—É–∑–∏—Ç–µ PDF —Ñ–∞–π–ª –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π –æ—Ü–µ–Ω–∫–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏
        </p>
      </div>

      {/* Upload Zone */}
      {!validationResult && (
        <div className="space-y-4">
          {/* –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç */}
          <div className="bg-yellow-100 p-4 rounded border">
            <h3>–¢–ï–°–¢: –ü—Ä–æ—Å—Ç–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞</h3>
            <input 
              type="file" 
              accept=".pdf" 
              onChange={async (e) => {
                console.log('üî• EVENT onChange —Å—Ä–∞–±–æ—Ç–∞–ª!');
                console.log('üî• e.target.files:', e.target.files);
                console.log('üî• –ü–†–û–°–¢–û–ô INPUT - —Ñ–∞–π–ª –≤—ã–±—Ä–∞–Ω:', e.target.files?.[0]);
                const file = e.target.files?.[0];
                if (file) {
                  console.log('üî• –§–∞–π–ª –Ω–∞–π–¥–µ–Ω:', file.name, file.type, file.size);
                  console.log('üî• –ù–∞—á–∏–Ω–∞–µ–º –∏–º–ø–æ—Ä—Ç PdfAnalyzer...');
                  
                  try {
                    // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º PdfAnalyzer
                    console.log('üî• –ü—ã—Ç–∞–µ–º—Å—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å...');
                    const { PdfAnalyzer } = await import('@/utils/pdfAnalyzer');
                    console.log('üî• PdfAnalyzer –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ!');
                    console.log('üî• –ù–∞—á–∏–Ω–∞–µ–º –Ω–∞—Å—Ç–æ—è—â–∏–π –∞–Ω–∞–ª–∏–∑...');
                    
                    // –î–æ–±–∞–≤–ª—è–µ–º timeout –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
                    const timeoutPromise = new Promise((_, reject) => {
                      setTimeout(() => reject(new Error('Timeout: –∞–Ω–∞–ª–∏–∑ –∑–∞–Ω—è–ª –±–æ–ª—å—à–µ 10 —Å–µ–∫—É–Ω–¥')), 10000);
                    });
                    
                    const analysisPromise = PdfAnalyzer.validatePdfFile(file);
                    
                    const result = await Promise.race([analysisPromise, timeoutPromise]) as PdfValidationResult;
                    console.log('üî• –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞:', result);
                    
                    handleFileValidated(result);
                  } catch (error) {
                    console.error('üî• –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞:', error);
                    handleFileValidated({
                      isValid: false,
                      fileInfo: {
                        name: file.name,
                        size: file.size,
                        type: file.type,
                        lastModified: file.lastModified
                      },
                      pdfType: 'unknown',
                      complexity: 'low',
                      estimatedProcessingTime: 0,
                      errors: [`–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: ${error}`],
                      warnings: []
                    });
                  }
                }
              }}
            />
          </div>
          
          <PDFUploadZone
            onFileValidated={handleFileValidated}
            className="max-w-2xl mx-auto"
          />
        </div>
      )}

      {/* Validation Result */}
      {validationResult && (
        <div className="space-y-4">
          <PDFValidationResultComponent result={validationResult} />
          
          {/* Action Buttons */}
          <Card>
            <CardHeader>
              <CardTitle>–î–µ–π—Å—Ç–≤–∏—è —Å –¥–æ–∫—É–º–µ–Ω—Ç–æ–º</CardTitle>
              <CardDescription>
                –í—ã–±–µ—Ä–∏—Ç–µ –¥–∞–ª—å–Ω–µ–π—à–∏–µ –¥–µ–π—Å—Ç–≤–∏—è —Å –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–º PDF —Ñ–∞–π–ª–æ–º
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="flex flex-wrap gap-3">
                <Button
                  onClick={handleReset}
                  variant="outline"
                  className="gap-2"
                >
                  <RotateCcw className="w-4 h-4" />
                  –ó–∞–≥—Ä—É–∑–∏—Ç—å –¥—Ä—É–≥–æ–π —Ñ–∞–π–ª
                </Button>
                
                {validationResult.isValid && (
                  <>
                    <Button
                      onClick={handleProcessDocument}
                      disabled={isProcessing}
                      className="gap-2"
                    >
                      <Eye className="w-4 h-4" />
                      {isProcessing ? '–û–±—Ä–∞–±–æ—Ç–∫–∞...' : '–ù–∞—á–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É'}
                    </Button>
                    
                    <Button
                      variant="secondary"
                      className="gap-2"
                      disabled
                    >
                      <Download className="w-4 h-4" />
                      –°–∫–∞—á–∞—Ç—å –æ—Ç—á–µ—Ç
                    </Button>
                  </>
                )}
              </div>
            </CardContent>
          </Card>
        </div>
      )}

      {/* Features Info */}
      <Card className="glass-effect">
        <CardHeader>
          <CardTitle>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            <div className="space-y-2">
              <h4 className="font-medium">üìÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞</h4>
              <p className="text-sm text-muted-foreground">
                –í–∞–ª–∏–¥–∞—Ü–∏—è MIME-type –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã PDF —Ñ–∞–π–ª–∞
              </p>
            </div>
            
            <div className="space-y-2">
              <h4 className="font-medium">üìä –ê–Ω–∞–ª–∏–∑ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ</h4>
              <p className="text-sm text-muted-foreground">
                –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ PDF: —Ç–µ–∫—Å—Ç–æ–≤—ã–π, —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏–ª–∏ —Å–º–µ—à–∞–Ω–Ω—ã–π
              </p>
            </div>
            
            <div className="space-y-2">
              <h4 className="font-medium">‚è±Ô∏è –û—Ü–µ–Ω–∫–∞ –≤—Ä–µ–º–µ–Ω–∏</h4>
              <p className="text-sm text-muted-foreground">
                –†–∞—Å—á–µ—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞
              </p>
            </div>
            
            <div className="space-y-2">
              <h4 className="font-medium">üî¢ –ü–æ–¥—Å—á–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü</h4>
              <p className="text-sm text-muted-foreground">
                –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å—Ç—Ä–∞–Ω–∏—Ü —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –ª–∏–º–∏—Ç–∞
              </p>
            </div>
            
            <div className="space-y-2">
              <h4 className="font-medium">üéØ –û—Ü–µ–Ω–∫–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏</h4>
              <p className="text-sm text-muted-foreground">
                –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ —É—Ä–æ–≤–Ω—é —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
              </p>
            </div>
            
            <div className="space-y-2">
              <h4 className="font-medium">üöÄ Drag & Drop</h4>
              <p className="text-sm text-muted-foreground">
                –£–¥–æ–±–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤
              </p>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  );
};